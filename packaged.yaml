AWSTemplateFormatVersion: '2010-09-09'
Description: An application to periodically search tweets and store them in DynamoDB.
Resources:
  LambdaExecutorRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:BatchWriteItem
            Effect: Allow
            Resource: '*'
            Sid: Stmt1428341300017
          - Action:
            - kms:Decrypt
            Effect: Allow
            Resource: '*'
            Sid: ''
          - Action:
            - ssm:GetParameters
            Effect: Allow
            Resource: '*'
            Sid: ''
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
            Sid: ''
          Version: '2012-10-17'
        PolicyName: TwiterDynamoDBPolicy
    Type: AWS::IAM::Role
  QueriesTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: QueryId
        AttributeType: S
      KeySchema:
      - AttributeName: QueryId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
    Type: AWS::DynamoDB::Table
  TweetsTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: TweetId
        AttributeType: N
      - AttributeName: QueryId
        AttributeType: S
      KeySchema:
      - AttributeName: QueryId
        KeyType: HASH
      - AttributeName: TweetId
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    Type: AWS::DynamoDB::Table
  TwitterSearchAndStoreHandler:
    Properties:
      CodeUri: s3://twitter-to-dynamodb/sources/fb9d1698f6031d0f9dca01692485b1c0
      Environment:
        Variables:
          QUERIES_TABLE_NAME:
            Ref: QueriesTable
          TWEETS_TABLE_NAME:
            Ref: TweetsTable
      Events:
        Timer:
          Properties:
            Schedule: rate(5 minutes)
          Type: Schedule
      Handler: src.twitter_handler.search_and_store
      Role:
        Fn::GetAtt:
        - LambdaExecutorRole
        - Arn
      Runtime: python3.6
      Timeout: 60
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
